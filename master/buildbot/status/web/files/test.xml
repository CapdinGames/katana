<?xml version="1.0" encoding="utf-8" standalone="no"?>
<?xml-stylesheet  type="text/xsl" href="/NUnit-NoFrame.xsl"?>

<test-results name="UNNAMED" total="638" failures="0" not-run="35" date="2013-06-05" time="16:43:07">
<cache>fsdfdsf</cache>
  <environment nunit-version="2.4.7.0" clr-version="2.0.50727.4952" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\buildslave\unity\build\Projects\CSharp" machine-name="WIN-SLAVE-03" user="builduser" user-domain="WIN-SLAVE-03" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="UNNAMED" success="True" time="5287.320" asserts="0">
    <results>
      <test-suite name="C:\buildslave\unity\build\Tests\bin\Debug\Unity.IntegrationTests.dll" success="True" time="5132.736" asserts="0">
        <results>
          <test-suite name="Unity" success="True" time="5126.851" asserts="0">
            <results>
              <test-suite name="IntegrationTests" success="True" time="5126.848" asserts="0">
                <results>
                  <test-suite name="Analytics" success="True" time="16.684" asserts="0">
                    <results>
                      <test-suite name="AnalyticsTests" success="False" time="16.631" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Analytics.AnalyticsTests.CSharpErrorGetsCorrectlyReportedToAnalytics" executed="True" success="True" time="12.539" asserts="2" />
                          <test-case name="Unity.IntegrationTests.Analytics.AnalyticsTests.LaunchingUnityGetsCorrectlyReportedToAnalytics" executed="True" success="True" time="4.019" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="GoogleAnalyticsRequestTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Analytics.GoogleAnalyticsRequestTest.CanParse" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="AssetBundles" success="True" time="34.537" asserts="0">
                    <results>
                      <test-suite name="PlatformCompatibilityIphone" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetBundles.PlatformCompatibilityIphone.IphoneDoesNotLoadAndroidAssetBundle" executed="False">
                            <reason>
                              <message><![CDATA[Needs an iPhone Player]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetBundles.PlatformCompatibilityIphone.IphoneDoesNotLoadStandaloneOSXIntelAssetBundle" executed="False">
                            <reason>
                              <message><![CDATA[Needs an iPhone Player]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetBundles.PlatformCompatibilityIphone.IphoneDoesNotLoadStandaloneWindowsAssetBundle" executed="False">
                            <reason>
                              <message><![CDATA[Needs an iPhone Player]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetBundles.PlatformCompatibilityIphone.IphoneDoesNotLoadWebPlayerAssetBundle" executed="False">
                            <reason>
                              <message><![CDATA[Needs an iPhone Player]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetBundles.PlatformCompatibilityIphone.IphoneLoadsIphoneAssetBundle" executed="False">
                            <reason>
                              <message><![CDATA[Needs an iPhone Player]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="Unloading" success="True" time="34.501" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetBundles.Unloading.OnApplicationQuitUnloadBundle" executed="True" success="True" time="12.404" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetBundles.Unloading.UnloadBundleCreatedFromFile" executed="True" success="True" time="9.354" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetBundles.Unloading.UnloadBundleDontDestroyObjects" executed="True" success="True" time="12.730" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="AssetImporting" success="True" time="1450.349" asserts="0">
                    <results>
                      <test-suite name="AddMetaFileForExistedAssetsTest" success="True" time="11.152" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AddMetaFileForExistedAssetsTest.AddHiddenMetaFileForExistedAssets" executed="True" success="True" time="5.903" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AddMetaFileForExistedAssetsTest.AddVisibleMetaFileForExistedAssets" executed="True" success="True" time="5.246" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AlwaysComputeHashesTest" success="True" time="21.358" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AlwaysComputeHashesTest.ExistedAssetWithHiddenMetaFile" executed="True" success="True" time="5.167" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AlwaysComputeHashesTest.ExistedAssetWithVisibleMetaFile" executed="True" success="True" time="5.177" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AlwaysComputeHashesTest.NewAssetWithHiddenMetaFile" executed="True" success="True" time="5.633" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AlwaysComputeHashesTest.NewAssetWithVisbileMetaFile" executed="True" success="True" time="5.369" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AlwaysEnableMetaFileTest" success="True" time="12.036" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AlwaysEnableMetaFileTest.HiddenMetaFileFirst" executed="True" success="True" time="6.054" asserts="3" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AlwaysEnableMetaFileTest.VisibleMetaFileFirst" executed="True" success="True" time="5.975" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetDatabaseCreate" success="True" time="17.451" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseCreate.CreateAssetInNonExistingFolderGivesError" executed="True" success="True" time="5.933" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseCreate.CreateAssetKeepsReferenceValid" executed="True" success="True" time="6.782" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseCreate.CreateAssetWhenFolderHasNotYetBeenImportedWorks" executed="True" success="True" time="4.678" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetDatabaseCreateUsingMetaFiles" success="True" time="17.209" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseCreateUsingMetaFiles.CreateAssetInNonExistingFolderGivesError" executed="True" success="True" time="5.723" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseCreateUsingMetaFiles.CreateAssetKeepsReferenceValid" executed="True" success="True" time="6.807" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseCreateUsingMetaFiles.CreateAssetWhenFolderHasNotYetBeenImportedWorks" executed="True" success="True" time="4.619" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetDatabaseMove" success="True" time="29.936" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.ChangeCaseonFile" executed="True" success="True" time="6.739" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.ChangeCaseOnFolderName" executed="True" success="True" time="1.542" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.MoveAssetIntoFolder" executed="True" success="True" time="1.154" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.MoveFolderIntoFolder" executed="True" success="True" time="1.613" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.MoveOnTopOfOtherAsset" executed="True" success="True" time="7.818" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.MovingSerialiedFile" executed="True" success="True" time="7.049" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.RenameFile" executed="True" success="True" time="1.994" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.RenameFolder" executed="True" success="True" time="1.245" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseMove.RenameNonExistingAsset" executed="True" success="True" time="0.716" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetDatabaseRefresh" success="True" time="39.033" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.DuplicatingMaterialInFileAfterRenameRetainsProperties" executed="True" success="True" time="7.562" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.DuplicatingMaterialInMemoryAfterRenameRetainsProperties" executed="True" success="True" time="1.362" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.EditorSettingsStickAroundAfterRefresh" executed="True" success="True" time="0.894" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.EditorSettingsStickAroundAfterSaveAndRefresh" executed="True" success="True" time="1.487" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.ModifyingMaterialFileOnDiskWillReloadAsset" executed="True" success="True" time="2.852" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.ReloadingEditorSettingsFileWorks" executed="True" success="True" time="1.145" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.ReloadingPhysicsManagerFileWorks" executed="True" success="True" time="0.661" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.ReloadingPhysicsManagerFileWorksInPlaymode" executed="True" success="True" time="7.867" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.SaveAssetAndRefreshDoesNotModifyInMemoryMaterial" executed="True" success="True" time="6.765" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.SaveAssetsDoesNotImportScripts" executed="True" success="True" time="5.880" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDatabaseRefresh.SymlinksWorkWithWarning" executed="True" success="True" time="2.477" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetDirtyTrackingTest" success="True" time="26.767" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDirtyTrackingTest.DestroyingAnObjectInSerializedAssetsFileWorks" executed="True" success="True" time="5.499" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDirtyTrackingTest.SerializedFilesWithOldDataAndSetDirtyAreSaved" executed="True" success="True" time="11.096" asserts="5" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDirtyTrackingTest.SerializedFilesWithOldDataAreNotSaved" executed="True" success="True" time="10.159" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetDirtyTrackingTestRebuildLibrary" success="True" time="9.815" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetDirtyTrackingTestRebuildLibrary.SerializedFilesWithOldDataAndReimportLibraryAreNotSaved" executed="True" success="True" time="9.814" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetNames" success="True" time="78.530" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.AssetDatabaseFunctionsWithBackslashesWork" executed="True" success="True" time="6.642" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.AssetDatabaseRefreshSynchronizesUpperLowerCase" executed="True" success="True" time="5.331" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.EmptyStringWhenObjectHasDontSaveSet" executed="True" success="True" time="5.352" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.FindSceneAssetFromGO" executed="True" success="True" time="5.323" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.GetPathToPrefab" executed="True" success="True" time="4.808" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.GetThePathToTheMaterial" executed="True" success="True" time="4.847" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.ImportAssetIncorrectCaseIsCorrected" executed="True" success="True" time="5.399" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.ShaderReimportDoesNotDestroyShaderName" executed="True" success="True" time="6.421" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.UnicodeFileNamePreservesCase" executed="True" success="True" time="6.074" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.UnicodeFolderRenamingFolder" executed="True" success="True" time="5.542" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.UnicodeFolderRenamingFolderWithInconsistentCase" executed="True" success="True" time="5.499" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.WillImportAssetStartingWithSpaceButWillGiveWarning" executed="True" success="True" time="5.969" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.WillNotCreateAssetWithSpaceInFront" executed="True" success="True" time="5.871" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.WillNotImportAssetWithInvalidFileName" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetNames.WillNotMoveToNotRecommendedPath" executed="True" success="True" time="5.408" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="AssetPostProcessor" success="True" time="48.635" asserts="0">
                        <results>
                          <test-suite name="AssetPostProcessors" success="True" time="29.970" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.AssetImporting.AssetPostProcessor.AssetPostProcessors.DeletingTheMeshActuallyDeletesIt" executed="True" success="True" time="9.798" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.AssetPostProcessor.AssetPostProcessors.DeletingTheRootDoesNotCrash" executed="True" success="True" time="9.114" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.AssetPostProcessor.AssetPostProcessors.UserDataIsPassedToPostprocessors" executed="True" success="True" time="11.050" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="AssetPostProcessorsVersion" success="True" time="18.657" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.AssetImporting.AssetPostProcessor.AssetPostProcessorsVersion.ReimportsAfterPostProcessorVersionBump" executed="True" success="True" time="18.655" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="AssetPreviewTests" success="True" time="42.657" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetPreviewTests.TestDirtyAssetHasCorrectPreview" executed="True" success="True" time="14.657" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetPreviewTests.TestHasBuiltinPreview" executed="True" success="True" time="8.649" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetPreviewTests.TestMovedAssetHasPreview" executed="True" success="True" time="10.182" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AssetPreviewTests.TestNonDirtyAsssetHasCorrectPreview" executed="True" success="True" time="9.155" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AsyncScriptAndPrefabImport" success="True" time="45.615" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.AsyncScriptAndPrefabImport.TestAddBothAtOnce" executed="True" success="True" time="9.697" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AsyncScriptAndPrefabImport.TestAddEmptyScriptThenBoth" executed="True" success="True" time="11.582" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AsyncScriptAndPrefabImport.TestAddEmptyScriptThenModifyValues" executed="True" success="True" time="12.482" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.AsyncScriptAndPrefabImport.TestUpdatingScriptOnPrefabWithNewProperty" executed="True" success="True" time="11.840" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CacheServer" success="True" time="186.069" asserts="0">
                        <results>
                          <test-suite name="CacheServer" success="True" time="186.062" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.CachedFBXWithMovedMaterialCausesReimport" executed="True" success="True" time="11.008" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.CacheServerCanLoadInAnotherProjectFolderAndPreviewsExist" executed="True" success="True" time="39.489" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.CacheServerReimportsAfterPostProcessorVersionBump" executed="True" success="True" time="17.432" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.ChangingNativeFormatAssetOnDiskReloadsAsset" executed="True" success="True" time="11.748" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.FailedModelImportIsNeverUploaded" executed="True" success="True" time="14.773" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.ImportingAssetWithDirtyImportSettings" executed="True" success="True" time="31.808" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.ImportingAssetWithDirtyImportSettingsAndWriteImportSettings" executed="True" success="True" time="11.705" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.MovingAssetCausesReimport" executed="True" success="True" time="10.509" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.NoMetaFilesGivesWarningOnImport" executed="True" success="True" time="6.011" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.NotYetCompressedTextureIsNeverUploaded" executed="True" success="True" time="10.654" asserts="0" />
                              <test-case name="Unity.IntegrationTests.AssetImporting.CacheServer.CacheServer.UsingAnimationAtSignTracksDependencies" executed="True" success="True" time="20.892" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="CanUpgradeShadersFromUnity2xProject" success="True" time="7.316" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.CanUpgradeShadersFromUnity2xProject.Test" executed="True" success="True" time="7.312" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DeleteAssetTest" success="True" time="6.476" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.DeleteAssetTest.DeleteAsset" executed="True" success="True" time="6.475" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ExternalVersionControl" success="True" time="151.036" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.CannotOverrideAssetFolderGUID" executed="True" success="True" time="10.223" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.ChangingTheGUIDInAnExistingMetaFileUpdatesTheGUIDAndReferencesToTheAssetAreLost" executed="True" success="True" time="9.285" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.ConflictingGUIDsInMetaFileAreResolvedAndWarningIsDisplayedAndMetaFileIsUpdated" executed="True" success="True" time="7.248" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.CreateTheTextMetaFileDuringImport" executed="True" success="True" time="10.434" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.DeletingAnAssetThenChangingAnotherAssetsGUIDToTheDeletedOneWillMakeTheReferenceToTheAssetReappear" executed="True" success="True" time="8.397" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.DeletingAssetAutomaticallyDeletesMetaFile" executed="True" success="True" time="6.055" asserts="3" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.DeletingMetaFileAndRefreshGeneratesTheMetaFileAgain" executed="True" success="True" time="6.331" asserts="4" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.DisablingExternalVersionControlRemovesMetaFiles" executed="True" success="True" time="5.780" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.ImportingUnmodifiedAssetWillNotTouchAnyAssetSourceDataIncludingMetaFiles" executed="True" success="True" time="8.779" asserts="87" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.MetaFileSettingsAreUsedAsDefaultsForImportSettingsAndThenDeleted" executed="True" success="True" time="7.045" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.MetaFileWithIncorrectCaseIsFixedInRefresh" executed="True" success="True" time="8.544" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.MoveBothMetaFileAndActualAssetMaintainsGUIDAndReferencesToTheMovedAsset" executed="True" success="True" time="7.899" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.NativeFormatAssetsAreNotKeptLocked" executed="True" success="True" time="6.201" asserts="5" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.OldMetaFilesAndNewMetaFilesCarrySameInformation" executed="True" success="True" time="7.060" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.RefreshingCreatesMissingMetaFiles" executed="True" success="True" time="6.156" asserts="2" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.RefreshingDeletesMetaFilesWhenDisabled" executed="True" success="True" time="6.257" asserts="3" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.RefreshingModifiedMetaFileWillUpdateImporterAndNotWriteMetaFile" executed="True" success="True" time="11.126" asserts="4" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.ReimportingModifiedAssetWillRewriteMetaFile" executed="True" success="True" time="8.681" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ExternalVersionControl.SavingModifiedAssetWillNotRewriteMetaFile" executed="True" success="True" time="9.479" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FailedAssetImportTracking" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.FailedAssetImportTracking.ImportFBXFileAsDefaultWhenInFailedAssets" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.FailedAssetImportTracking.ImportFbxFileCrashAddsToFailedImports" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.FailedAssetImportTracking.ImportFBXFileWorksAfterReimport" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="FBXImporter" success="True" time="49.614" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.FBXImporter.ImportedPrefabIsMerged" executed="True" success="True" time="5.966" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.FBXImporter.ImportMeshWithInvalidMaterialNames" executed="True" success="True" time="9.367" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.FBXImporter.RetainsFileIDToRecycleName" executed="True" success="True" time="24.389" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.FBXImporter.UserPropertiesGetPassedToPostProcessorCorrectly" executed="True" success="True" time="9.878" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ImportNewAssetForTheFirstTime" success="True" time="12.605" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.ImportNewAssetForTheFirstTime.ImportAsset" executed="True" success="True" time="7.217" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ImportNewAssetForTheFirstTime.ImportAssetAtUnknownPathDoesNotGiveWarning" executed="True" success="True" time="5.383" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ModelImporterTest" success="True" time="28.248" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.ModelImporterTest.ImportAvatarAnimation" executed="True" success="True" time="7.501" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ModelImporterTest.ImportStandardAnimation" executed="True" success="True" time="20.744" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ModelImporterTopologyTests" success="True" time="5.759" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.ModelImporterTopologyTests.TestModelImportsWithExpectedTopology" executed="True" success="True" time="5.758" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="NativeFormatImporter" success="True" time="5.226" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.NativeFormatImporter.GlobalGameManagerInAssetWillBeIgnored" executed="True" success="True" time="5.225" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="OnlyUpdateAssetsWithActualChangesTest" success="True" time="20.949" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.OnlyUpdateAssetsWithActualChangesTest.UpdateAssetsWithoutActualChange" executed="True" success="True" time="10.077" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.OnlyUpdateAssetsWithActualChangesTest.UpdateMetaFilesWithoutActualChange" executed="True" success="True" time="10.869" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PackageImportExport" success="True" time="29.918" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.PackageImportExport.BatchModeExportAndImport" executed="True" success="True" time="14.852" asserts="24" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.PackageImportExport.BatchModeExportAndImportTextMode" executed="True" success="True" time="15.059" asserts="24" />
                        </results>
                      </test-suite>
                      <test-suite name="RejectsBlacklistedDllsTest" success="True" time="6.245" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.RejectsBlacklistedDllsTest.ImportBlacklistedDll" executed="True" success="True" time="6.242" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SaveAssetsProcessorTest" success="True" time="74.493" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.SaveAssetsProcessorTest.DeleteAssets" executed="True" success="True" time="12.631" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.SaveAssetsProcessorTest.MoveAssets" executed="True" success="True" time="11.930" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.SaveAssetsProcessorTest.SaveAssetsProcessorsWorksForAssets" executed="True" success="True" time="12.506" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.SaveAssetsProcessorTest.SaveAssetsProcessorsWorksForManagers" executed="True" success="True" time="11.210" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.SaveAssetsProcessorTest.SaveAssetsProcessorsWorksForMetaFiles" executed="True" success="True" time="13.075" asserts="3" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.SaveAssetsProcessorTest.SaveAssetsProcessorsWorksForScenes" executed="True" success="True" time="13.123" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ShaderImport" success="True" time="11.974" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.ShaderImport.TestUsePassComplex" executed="True" success="True" time="7.541" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ShaderImport.TestUsePassLikeToonShader" executed="True" success="True" time="2.887" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.ShaderImport.TestUsePassSimple" executed="True" success="True" time="1.515" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TextImporterTests" success="True" time="17.433" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextImporterTests.TestASCII" executed="True" success="True" time="6.699" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextImporterTests.TestByteArray" executed="True" success="True" time="8.775" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextImporterTests.TestUTF16" executed="True" success="True" time="0.967" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextImporterTests.TestUTF8" executed="True" success="True" time="0.951" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TextureImporterTests" success="True" time="298.049" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.NotYetCompressedTexturesGetCompressedOnBuild" executed="True" success="True" time="25.732" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.NotYetCompressedTexturesGetCompressedOnSettingCompressTexturesOnImport" executed="True" success="True" time="12.077" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.Test26ImportedNormalMap" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestCompressedLightmap" executed="True" success="True" time="8.892" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestDXT5" executed="True" success="True" time="10.239" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestEXRWithRGB" executed="True" success="True" time="9.112" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestEXRWithRGBA" executed="True" success="True" time="10.113" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestEXRWithRGBAWithOneinAlpha" executed="True" success="True" time="9.329" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestFailingTIFF" executed="True" success="True" time="9.994" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestGeneratedNormalmapWithMipFade" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLightmapNpotDLDR" executed="True" success="True" time="9.099" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLightmapNpotRGBM" executed="True" success="True" time="10.031" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLightmapPotDLDR" executed="True" success="True" time="9.434" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLightmapPotDownscaleTwiceMM" executed="True" success="True" time="10.882" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLightmapPOTDownscaleTwiceNoMM" executed="True" success="True" time="8.982" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLightmapPotRGBM" executed="True" success="True" time="10.184" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLinearInGammaMMInLinearOutGamma" executed="True" success="True" time="9.087" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLinearInGammaMMInLinearOutGammaResize" executed="True" success="True" time="10.109" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestLinearInGammaNoMMOutGamma" executed="True" success="True" time="9.074" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestMipmaps" executed="True" success="True" time="10.352" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestNormalmap" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestNormalmapSetting" executed="True" success="True" time="10.654" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestNormalmapUncompressed" executed="True" success="True" time="9.085" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestNPOTDXT1" executed="True" success="True" time="9.363" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestPSD" executed="True" success="True" time="9.033" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestPSDCMYK" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestPSDGrayscale" executed="True" success="True" time="9.884" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestReformatImageMaxSize" executed="True" success="True" time="8.954" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestRGBA" executed="True" success="True" time="10.079" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestSimpleMipFade" executed="True" success="True" time="9.144" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestSimpleMMBilinear" executed="True" success="True" time="9.929" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestSimpleMMBox" executed="True" success="True" time="9.105" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TextureImporterTests.TestSimpleMMKaiser" executed="True" success="True" time="10.007" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TexturePostprocessing" success="True" time="10.249" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TexturePostprocessing.TestPostprocessingDefault" executed="True" success="True" time="10.247" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TrueTypeFontImporter" success="True" time="43.414" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.TrueTypeFontImporter.FontWithUnparseableNameWontCrash" executed="True" success="True" time="5.698" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TrueTypeFontImporter.TestLargeFont" executed="True" success="True" time="9.901" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TrueTypeFontImporter.TestNegativeSizeFont" executed="True" success="True" time="8.994" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TrueTypeFontImporter.TestNormalFont" executed="True" success="True" time="9.930" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.TrueTypeFontImporter.TestZeroSizeFont" executed="True" success="True" time="8.877" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnityCrashWithoutDataloss" success="True" time="37.105" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.UnityCrashWithoutDataloss.CrashUnityAfterImportDoesNotReimportAssets" executed="True" success="True" time="13.607" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.UnityCrashWithoutDataloss.CrashUnityAfterMaterialCreateMaintainsReferences" executed="True" success="True" time="9.114" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.UnityCrashWithoutDataloss.CrashUnityDuringAssetImportAfterHavingCreatedAMaterialKeepsMaterialReferencesValid" executed="True" success="True" time="14.378" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnityCrashWithoutDatalossUsingMetaFiles" success="True" time="35.793" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.UnityCrashWithoutDatalossUsingMetaFiles.CrashUnityAfterImportDoesNotReimportAssets" executed="True" success="True" time="12.200" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.UnityCrashWithoutDatalossUsingMetaFiles.CrashUnityAfterMaterialCreateMaintainsReferences" executed="True" success="True" time="8.991" asserts="0" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.UnityCrashWithoutDatalossUsingMetaFiles.CrashUnityDuringAssetImportAfterHavingCreatedAMaterialKeepsMaterialReferencesValid" executed="True" success="True" time="14.593" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UpdateExistedAssetsAndMetaFilesTest" success="True" time="11.986" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.AssetImporting.UpdateExistedAssetsAndMetaFilesTest.HiddenMetaFiles" executed="True" success="True" time="6.173" asserts="1" />
                          <test-case name="Unity.IntegrationTests.AssetImporting.UpdateExistedAssetsAndMetaFilesTest.VisibleMetaFiles" executed="True" success="True" time="5.809" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Audio" success="True" time="41.663" asserts="0">
                    <results>
                      <test-suite name="AudioImportTest" success="True" time="24.729" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Audio.AudioImportTest.ImportAudioFile" executed="True" success="True" time="8.306" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Audio.AudioImportTest.TestBitRates" executed="True" success="True" time="2.955" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Audio.AudioImportTest.TestDownmix" executed="True" success="True" time="5.894" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Audio.AudioImportTest.TestOggEncoding" executed="True" success="True" time="7.531" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="WWWAudioStreamingWavTest" success="True" time="16.921" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Audio.WWWAudioStreamingWavTest.InEditor" executed="True" success="True" time="16.920" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Builds" success="True" time="53.899" asserts="0">
                    <results>
                      <test-suite name="BuildPlayerPreventsEditorDll" success="True" time="19.154" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Builds.BuildPlayerPreventsEditorDll.BuildWithDll" executed="True" success="True" time="9.115" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Builds.BuildPlayerPreventsEditorDll.BuildWithScript" executed="True" success="True" time="10.038" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="InputClassesCanBeUsedWithOtherBuilds" success="True" time="15.589" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Builds.InputClassesCanBeUsedWithOtherBuilds.WebPlayerBuildCanUseInputTest" executed="True" success="True" time="15.588" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="WebplayerBuildsContainCorrectAssemblies" success="True" time="19.140" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Builds.WebplayerBuildsContainCorrectAssemblies.SystemXMLGetsIncludedInGamefile" executed="True" success="True" time="19.139" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="WebplayerPublishing" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Builds.WebplayerPublishing.FailedAuthorizationFails" executed="False">
                            <reason>
                              <message><![CDATA[Ignoring web player deployment until backend is done]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.Builds.WebplayerPublishing.FailedUploadFails" executed="False">
                            <reason>
                              <message><![CDATA[Ignoring web player deployment until backend is done]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.Builds.WebplayerPublishing.SuccessfulPublishingIsSuccessfull" executed="False">
                            <reason>
                              <message><![CDATA[Ignoring web player deployment until backend is done]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.Builds.WebplayerPublishing.SuccessfulPublishingOverwriteIsSuccessfull" executed="False">
                            <reason>
                              <message><![CDATA[Ignoring web player deployment until backend is done]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.Builds.WebplayerPublishing.SuccessfulPublishingVersionIsSuccessfull" executed="False">
                            <reason>
                              <message><![CDATA[Ignoring web player deployment until backend is done]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="EditorUI" success="True" time="279.555" asserts="0">
                    <results>
                      <test-suite name="AssetImporterRetainsValuesAfterScriptReload" success="True" time="9.182" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.AssetImporterRetainsValuesAfterScriptReload.Test" executed="True" success="True" time="9.182" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="EditorWindowsEvents" success="True" time="57.224" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.EditorWindowsEvents.CanReceiveCustomSendEvent" executed="True" success="True" time="13.985" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.EditorWindowsEvents.CanReceiveMenuEvent" executed="True" success="True" time="13.288" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.EditorWindowsEvents.EventRestoredAfterMouseEvent" executed="True" success="True" time="15.291" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.EditorWindowsEvents.EventRestoredAfterSendEvent" executed="True" success="True" time="14.652" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GameObjectHierarchyPropertyTests" success="True" time="20.908" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.GameObjectHierarchyPropertyTests.Skip3RootGameObjects" executed="True" success="True" time="4.940" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.GameObjectHierarchyPropertyTests.SkipChildrenCombinations" executed="True" success="True" time="4.885" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.GameObjectHierarchyPropertyTests.SkipChildrenInHierarchy" executed="True" success="True" time="5.986" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.GameObjectHierarchyPropertyTests.SkipEmpty" executed="True" success="True" time="5.087" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GameViewSizeTests" success="True" time="32.179" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.GameViewSizeTests.EnsureGameViewSizeIsCorrectWhenScriptsAreInitialized" executed="True" success="True" time="32.177" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="InspectorCustomDrawers" success="True" time="11.125" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorCustomDrawers.TestGetDrawerFunction" executed="True" success="True" time="11.122" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="InspectorMultiSelection" success="True" time="67.648" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorIsCreatedForAllComponentsOnAllObjects" executed="True" success="True" time="10.121" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorIsCreatedForMultipleObjects" executed="True" success="True" time="5.898" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorIsHiddenForComponentsNotOnAllObjects" executed="True" success="True" time="10.264" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorIsHiddenForDifferentScriptableObjects" executed="True" success="True" time="9.859" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorIsNotCreatedWhenImporterTypesAreDifferent" executed="True" success="True" time="10.439" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorIsShownForAllComponentsOnSingleObject" executed="True" success="True" time="10.396" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.InspectorMultiSelection.EditorWontContainDestroyedObjects" executed="True" success="True" time="10.650" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MenuTests" success="True" time="15.805" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.MenuTests.ContextMenuForTypeHierarchy" executed="True" success="True" time="11.429" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.MenuTests.ExecuteMenuItem" executed="True" success="True" time="1.330" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.MenuTests.ExecuteMenuItemThatDoesntExist" executed="True" success="True" time="0.772" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.MenuTests.ExecuteShortcutTestExistingShortcuts" executed="True" success="True" time="0.947" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.MenuTests.ExecuteShortcutTestNonExistingShortcuts" executed="True" success="True" time="1.272" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="Search" success="True" time="65.456" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.EditorUI.Search.ProjectWindowResultsAreSorted" executed="True" success="True" time="14.583" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.Search.ProjectWindowSearch" executed="True" success="True" time="9.297" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.Search.SceneSearchAll" executed="True" success="True" time="9.461" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.Search.SceneSearchNames" executed="True" success="True" time="9.687" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.Search.SceneSearchStartPlaymodeWillNotBreakSearchResults" executed="True" success="True" time="12.606" asserts="0" />
                          <test-case name="Unity.IntegrationTests.EditorUI.Search.SceneSearchTypes" executed="True" success="True" time="9.772" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ExternalVersionControl" success="True" time="45.386" asserts="0">
                    <results>
                      <test-suite name="ExternalVersionControlSupport" success="True" time="45.385" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.AllImportersIncludedInTest" executed="True" success="True" time="10.387" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.ModifyingAssetsOnDiskWillReloadInMemoryCopy" executed="True" success="True" time="5.560" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.RenamedAssetReplacesDeleted" executed="True" success="True" time="4.817" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.RenamingAssetAndMetafileWillRetainGUID" executed="True" success="True" time="4.979" asserts="4" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.RenamingAssetsWithinUnity" executed="True" success="True" time="4.568" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.ScenesAndMeshAssets_Case280425" executed="True" success="True" time="4.578" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.SwappingAssets" executed="True" success="True" time="4.938" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ExternalVersionControl.ExternalVersionControlSupport.SwappingDirectories" executed="True" success="True" time="5.504" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="FileTests" success="True" time="10.809" asserts="0">
                    <results>
                      <test-suite name="FileDeletionTest" success="True" time="5.638" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.FileTests.FileDeletionTest.DeleteFileAndFolders" executed="True" success="True" time="5.636" asserts="6" />
                          <test-case name="Unity.IntegrationTests.FileTests.FileDeletionTest.DeleteSymbolicLinkedFileAndFolders" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="UnityLockFileTest" success="True" time="5.166" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.FileTests.UnityLockFileTest.VerifyThatLockFileExists" executed="True" success="True" time="5.163" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Lightmapping" success="True" time="410.205" asserts="0">
                    <results>
                      <test-suite name="Atlasing" success="True" time="68.068" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Lightmapping.Atlasing.ClampToMaxAtlasSize" executed="True" success="True" time="14.742" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Atlasing.IdenticalNames" executed="True" success="True" time="13.427" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Atlasing.InstanceIDsDontChangeAfterSavingScene" executed="True" success="True" time="2.504" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Atlasing.ManyCubes" executed="True" success="True" time="13.114" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Atlasing.TexelPacking" executed="True" success="True" time="15.911" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Atlasing.TightUVPacking" executed="True" success="True" time="8.331" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="BakeSelected" success="True" time="45.259" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Lightmapping.BakeSelected.CubesAndTerrain" executed="True" success="True" time="45.258" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MaterialMapping" success="True" time="102.146" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Lightmapping.MaterialMapping.Cookies" executed="True" success="True" time="18.911" asserts="0">
                            <categories>
                              <category name="FastSuite" />
                            </categories>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.Lightmapping.MaterialMapping.Emissive" executed="True" success="True" time="17.377" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.MaterialMapping.Mobile" executed="True" success="True" time="13.846" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.MaterialMapping.RGBTransparency" executed="True" success="True" time="18.369" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.MaterialMapping.UVLayers" executed="True" success="True" time="33.595" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="Retrieve" success="True" time="66.315" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Lightmapping.Retrieve.DirectionalLightmaps" executed="True" success="True" time="29.016" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Retrieve.DualLightmaps" executed="True" success="True" time="20.977" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Retrieve.SingleLightmaps" executed="True" success="True" time="16.289" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="Various" success="True" time="128.404" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.BeastSettingsXML" executed="True" success="True" time="19.811" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.DirectionalLightmaps" executed="True" success="True" time="24.439" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.LightCulledBelowHorizonForBounces" executed="True" success="True" time="14.389" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.LightmapTilingAndOffsetIsCorrectOnBatchedRenderers" executed="True" success="True" time="8.905" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.LightProbes" executed="True" success="True" time="2.579" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.LODGroup" executed="True" success="True" time="14.228" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.SkinnedMeshes" executed="True" success="True" time="13.932" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.SmallSceneNotAtOrigin" executed="True" success="True" time="16.132" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Lightmapping.Various.Transforms" executed="True" success="True" time="13.934" asserts="0">
                            <categories>
                              <category name="FastSuite" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Mecanim" success="True" time="19.290" asserts="0">
                    <results>
                      <test-suite name="AnimatorCrashTests" success="True" time="19.288" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Mecanim.AnimatorCrashTests.TestSyncTwoLayers_480780" executed="True" success="True" time="19.252" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AnimatorPrefab" success="False" time="0.000" asserts="0">
                        <results>
                          <test-case name="Unity/IntegrationTests/Mecanim/AnimatorPrefab/LoadAndPlayAnimatorPrefab" executed="True" success="False">
                            <reason>
                              <message><![CDATA[Fixture class is not public]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Misc" success="True" time="157.085" asserts="0">
                    <results>
                      <test-suite name="Batchmode" success="True" time="10.147" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.Batchmode.UpdateIsCalledInBatchMode" executed="True" success="True" time="10.143" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CollisionMessagesWithInvalidParameterTypeTest" success="True" time="23.933" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.CollisionMessagesWithInvalidParameterTypeTest.WarningIsEmittedForOnCollisionEnter" executed="True" success="True" time="11.190" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.CollisionMessagesWithInvalidParameterTypeTest.WarningIsEmittedForOnCollisionExit" executed="True" success="True" time="6.296" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.CollisionMessagesWithInvalidParameterTypeTest.WarningIsEmittedForOnCollisionStay" executed="True" success="True" time="6.414" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="EditorMisc" success="True" time="23.312" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.EditorMisc.CanCreateProjectWithRelativePath" executed="True" success="True" time="4.474" asserts="4" />
                          <test-case name="Unity.IntegrationTests.Misc.EditorMisc.EditorDoesNotClearReadOnlyFlagsForAssetsButDoesForLibrary" executed="True" success="True" time="12.259" asserts="2" />
                          <test-case name="Unity.IntegrationTests.Misc.EditorMisc.PragmasGetFixedOnUpgradeFrom2x" executed="True" success="True" time="6.558" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="FileTests" success="True" time="9.405" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.FileTests.CopyingDirectoryIntoNotYetCreatedDirectoryFails" executed="True" success="True" time="6.253" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.FileTests.CopyingDirectoryTargetDoesNotExistWorks" executed="True" success="True" time="0.845" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.FileTests.MovingDirectoryIntoNotYetCreatedDirectoryFails" executed="True" success="True" time="0.735" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.FileTests.MovingFileIntoNotYetCreatedDirectoryFails" executed="True" success="True" time="0.760" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.FileTests.ReplacingDirectoryTargetAlreadyExistsFails" executed="True" success="True" time="0.769" asserts="0" />
                        </results>
                      </test-suite> test.test.test
                      <test-suite name="GameObjectActiveState" success="True" time="11.380" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.GameObjectActiveState.ActiveStateIsInherited" executed="True" success="True" time="8.670" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.GameObjectActiveState.ActiveStateUpdatesOnReparenting" executed="True" success="True" time="0.862" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.GameObjectActiveState.InactiveParentGivesWarningOnUpdate" executed="True" success="True" time="1.808" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HideFlags" success="True" time="22.680" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.HideFlags.DontSaveCreatedInPlaymodeGetsUpdate" executed="True" success="True" time="13.695" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.HideFlags.DontSaveCreatedOutOfPlaymodeGetsUpdate" executed="True" success="True" time="8.946" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LaunchMultipleEditor" success="True" time="9.584" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.LaunchMultipleEditor.LaunchMultipleEditors" executed="True" success="True" time="9.582" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LocalSocialAPI" success="True" time="21.931" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.LocalSocialAPI.MustAuthenticateFirst" executed="True" success="True" time="6.148" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.LocalSocialAPI.PostingAchievementsWorks" executed="True" success="True" time="4.934" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.LocalSocialAPI.PostingScoresWorks" executed="True" success="True" time="4.862" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Misc.LocalSocialAPI.Works" executed="True" success="True" time="5.978" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ReferenceToAssetWindow" success="True" time="10.128" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.ReferenceToAssetWindow.TestReferenceToAssetBehaviour" executed="True" success="True" time="10.125" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ScriptableObjectTests" success="True" time="14.538" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Misc.ScriptableObjectTests.SelfReferencingScriptableObjectResourceWillNotCrashOnProjectReimport" executed="True" success="True" time="14.535" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Networking" success="True" time="588.519" asserts="0">
                    <results>
                      <test-suite name="Sockets" success="True" time="366.434" asserts="0">
                        <results>
                          <test-suite name="SocketSecurity" success="True" time="366.433" asserts="0">
                            <results>
                              <test-suite name="SocketSecurityTestsInEditor" success="True" time="254.335" asserts="0">
                                <results>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Can_Connect_Inside_Specified_PortRange_1" executed="True" success="True" time="9.761" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Can_Connect_Inside_Specified_PortRange_2" executed="True" success="True" time="10.646" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Can_Connect_Inside_Specified_PortRange_3" executed="True" success="True" time="9.765" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Can_Connect_Inside_Specified_PortRange_4" executed="True" success="True" time="11.157" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Can_Connect_Inside_Specified_PortRange_5" executed="True" success="True" time="9.897" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Can_Connect_To_Specific_Ports" executed="True" success="True" time="10.637" asserts="2">
                                    <categories>
                                      <category name="MinimalSuite" />
                                    </categories>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Cannot_Bind_More_Than_50_sockets" executed="True" success="True" time="10.041" asserts="0" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Cannot_Connect_Outside_Of_Specified_Port_Range" executed="True" success="True" time="9.963" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_Illegal_Policy_Is_Served_1" executed="True" success="True" time="13.040" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_Illegal_Policy_Is_Served_2" executed="True" success="True" time="9.931" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_Illegal_Policy_Is_Served_3" executed="True" success="True" time="11.026" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_Illegal_Policy_Is_Served_4" executed="True" success="True" time="10.017" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_Illegal_Policy_Is_Served_5" executed="True" success="True" time="10.667" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_No_PolicyServer_Is_Running_1" executed="True" success="True" time="10.700" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_No_PolicyServer_Is_Running_2" executed="True" success="True" time="10.589" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_No_PolicyServer_Is_Running_3" executed="True" success="True" time="11.050" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_No_PolicyServer_Is_Running_4" executed="True" success="True" time="11.013" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Connect_Fails_When_No_PolicyServer_Is_Running_5" executed="True" success="True" time="10.567" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.FailureToRetrievePolicyFileIsNotCached" executed="True" success="True" time="9.692" asserts="1">
                                    <categories>
                                      <category name="MinimalSuite" />
                                    </categories>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Policy_Received_From_Port_Higher_Than_1024_Allows_Requests_Above_1024" executed="True" success="True" time="10.982" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Policy_Received_From_Port_Higher_Than_1024_Dissallows_Requests_Below_1024" executed="True" success="True" time="9.551" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Policy_Received_From_Port_Lower_Than_1024_Allows_Requests_Above_1024" executed="True" success="True" time="11.710" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.Policy_Received_From_Port_Lower_Than_1024_Allows_Requests_Below_1024" executed="True" success="True" time="10.055" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.SocketSecurityTestsInEditor.PrefetchSocketPolicy_Returns_False_When_No_PolicyServer_Is_Running" executed="True" success="True" time="11.795" asserts="1">
                                    <categories>
                                      <category name="MinimalSuite" />
                                    </categories>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="TcpListeningSocketSecurityTests" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.TcpListeningSocketSecurityTests.CannotListenOnTcpOnPort0" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.TcpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.TcpListeningSocketSecurityTests.CannotListenOnTcpSocket" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.TcpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="TcpListeningSocketSecurityTestsInEditor" success="True" time="21.266" asserts="0">
                                <results>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.TcpListeningSocketSecurityTestsInEditor.CannotListenOnTcpOnPort0" executed="True" success="True" time="9.811" asserts="0" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.TcpListeningSocketSecurityTestsInEditor.CannotListenOnTcpSocket" executed="True" success="True" time="11.451" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="Tools" success="True" time="8.078" asserts="0">
                                <results>
                                  <test-suite name="SocketPolicyServerTest" success="True" time="0.010" asserts="0">
                                    <results>
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SocketPolicyServerTest.RespondsWithPolicy" executed="True" success="True" time="0.008" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="SocketResponderTest" success="True" time="7.814" asserts="0">
                                    <results>
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SocketResponderTest.CanCreateManyInARow" executed="True" success="True" time="7.781" asserts="0" />
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SocketResponderTest.GotConnectedToReturnsFalseWhenNotConnectedTo" executed="True" success="True" time="0.005" asserts="1" />
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SocketResponderTest.GotConnectedToReturnsTrueWhenConnectedTo" executed="True" success="True" time="0.006" asserts="1" />
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SocketResponderTest.Port0WillPickValidPort" executed="True" success="True" time="0.006" asserts="1" />
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SocketResponderTest.PortReturnsCorrectPort" executed="True" success="True" time="0.003" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="SynchronousUdpListenerTests" success="True" time="0.108" asserts="0">
                                    <results>
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.SynchronousUdpListenerTests.DoesItWork" executed="True" success="True" time="0.107" asserts="0" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="UdpListenerTest" success="True" time="0.117" asserts="0">
                                    <results>
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.UdpListenerTest.CanDisposeUdpListener" executed="True" success="True" time="0.108" asserts="0" />
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.UdpListenerTest.UdpListenerReceivesData" executed="True" success="True" time="0.004" asserts="0" />
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.UdpListenerTest.UdpListenerReportsNoDataReceived" executed="True" success="True" time="0.001" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="UdpSocketResponderTest" success="True" time="0.016" asserts="0">
                                    <results>
                                      <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.Tools.UdpSocketResponderTest.GotConnectedToReturnsTrueWhenConnectedTo" executed="True" success="True" time="0.015" asserts="1" />
                                    </results>
                                  </test-suite>
                                </results>
                              </test-suite>
                              <test-suite name="UdpListeningSocketSecurityTests" success="True" time="0.008" asserts="0">
                                <results>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receive_Data_On_UdpSocket_Throws_When_No_SocketPolicy_Is_Served_1" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receive_Data_On_UdpSocket_Throws_When_No_SocketPolicy_Is_Served_2" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receive_Data_On_UdpSocket_Throws_When_No_SocketPolicy_Is_Served_3" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receive_Data_On_UdpSocket_Works_When_SocketPolicy_Was_Prefetched_1" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receive_Data_On_UdpSocket_Works_When_SocketPolicy_Was_Prefetched_2" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receive_Data_On_UdpSocket_Works_When_SocketPolicy_Was_Prefetched_3" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receiving_Data_On_UdpSocket_Works_When_Allowing_SocketPolicy_Is_Served_1" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests.Receiving_Data_On_UdpSocket_Works_When_Allowing_SocketPolicy_Is_Served_2" executed="False">
                                    <reason>
                                      <message><![CDATA[Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTests is an abstract class]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="UdpListeningSocketSecurityTestsInEditor" success="True" time="82.714" asserts="0">
                                <results>
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receive_Data_On_UdpSocket_Throws_When_No_SocketPolicy_Is_Served_1" executed="True" success="True" time="10.771" asserts="0" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receive_Data_On_UdpSocket_Throws_When_No_SocketPolicy_Is_Served_2" executed="True" success="True" time="10.802" asserts="0" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receive_Data_On_UdpSocket_Throws_When_No_SocketPolicy_Is_Served_3" executed="True" success="True" time="10.663" asserts="0" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receive_Data_On_UdpSocket_Works_When_SocketPolicy_Was_Prefetched_1" executed="True" success="True" time="9.647" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receive_Data_On_UdpSocket_Works_When_SocketPolicy_Was_Prefetched_2" executed="True" success="True" time="10.677" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receive_Data_On_UdpSocket_Works_When_SocketPolicy_Was_Prefetched_3" executed="True" success="True" time="9.912" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receiving_Data_On_UdpSocket_Works_When_Allowing_SocketPolicy_Is_Served_1" executed="True" success="True" time="10.628" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.Sockets.SocketSecurity.UdpListeningSocketSecurityTestsInEditor.Receiving_Data_On_UdpSocket_Works_When_Allowing_SocketPolicy_Is_Served_2" executed="True" success="True" time="9.591" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="WWWClass" success="True" time="222.056" asserts="0">
                        <results>
                          <test-suite name="WWWResponseHeadersWork" success="True" time="13.096" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWResponseHeadersWork.InEditor" executed="True" success="True" time="13.094" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="WWWSecurity" success="True" time="208.947" asserts="0">
                            <results>
                              <test-suite name="WWWSecurityTestsEditor" success="True" time="208.947" asserts="0">
                                <results>
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanConnectToNon80Port" executed="True" success="True" time="9.569" asserts="1" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CannotReadBytesFromOtherDomainWithoutCrossDomainFile" executed="True" success="True" time="10.541" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CannotReadMovieFromOtherDomainWithoutCrossDomainFile" executed="True" success="True" time="11.662" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CannotReadTextFromNon80PortWithoutCrossDomain" executed="True" success="True" time="9.404" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CannotReadTextFromOtherDomainWithoutCrossDomainFile" executed="True" success="True" time="10.730" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanOnlyDisplayTextureFromOtherDomainWithoutCrossDomainFile" executed="True" success="True" time="9.691" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadAssetBundleFromOtherDomainWithCrossDomainFile" executed="True" success="True" time="15.568" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadAssetBundleFromSameDomainWithoutCrossDomainFile" executed="True" success="True" time="10.478" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadBytesFromOtherDomainWithCrossDomainFile" executed="True" success="True" time="8.990" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadBytesFromSameDomainWithoutCrossDomainFile" executed="True" success="True" time="10.314" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadMovieFromSameDomainWithoutCrossDomainFile" executed="True" success="True" time="12.342" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadOggFromOtherDomainWithoutCrossDomainFile" executed="True" success="True" time="9.888" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadTextFromOtherDomainWithCrossDomainFile" executed="True" success="True" time="10.690" asserts="2">
                                    <categories>
                                      <category name="MinimalSuite" />
                                    </categories>
                                  </test-case>
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadTextFromOwnSubDomainWithoutCrossDomainFile" executed="True" success="True" time="9.156" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadTextFromSameDomainWithoutCrossDomainFile" executed="True" success="True" time="10.302" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadTextureFromOtherDomainWithCrossDomainFile" executed="True" success="True" time="9.861" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CanReadTextureFromSameDomainWithoutCrossDomainFile" executed="True" success="True" time="10.355" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.CopyOfUnreadableTextureIsStillUnreadable" executed="True" success="True" time="9.840" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.ErrorGetsSetWhenWWWDoesNotEventDownloadBecauseOfSecurityConcerns" executed="True" success="True" time="10.028" asserts="2" />
                                  <test-case name="Unity.IntegrationTests.Networking.WWWClass.WWWSecurity.WWWSecurityTestsEditor.WWWReadFromLocalDiskBehavesCorrectly" executed="True" success="True" time="9.493" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="OpenAsset" success="True" time="55.336" asserts="0">
                    <results>
                      <test-suite name="OpenAssets" success="True" time="55.336" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.OpenAsset.OpenAssets.OpenAssetAllowsCheckForFileExtension" executed="True" success="True" time="13.836" asserts="0" />
                          <test-case name="Unity.IntegrationTests.OpenAsset.OpenAssets.OpenAssetAllowsCheckForObjectType" executed="True" success="True" time="7.929" asserts="0" />
                          <test-case name="Unity.IntegrationTests.OpenAsset.OpenAssets.OpenAssetCallbackForPsdFile" executed="True" success="True" time="7.976" asserts="0" />
                          <test-case name="Unity.IntegrationTests.OpenAsset.OpenAssets.OpenAssetCallbackIsCalledWhenHavingCorrectSignature" executed="True" success="True" time="7.951" asserts="0" />
                          <test-case name="Unity.IntegrationTests.OpenAsset.OpenAssets.OpenAssetCallbackWithIncorrectSignatureThrowsError" executed="True" success="True" time="17.631" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Physics" success="True" time="91.370" asserts="0">
                    <results>
                      <test-suite name="PhysicsCasting" success="True" time="74.487" asserts="0">
                        <results>
                          <test-suite name="PhysicsCastTests" success="True" time="74.481" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Physics.PhysicsCasting.PhysicsCastTests.BasicPhysicsCast" executed="True" success="True" time="14.739" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Physics.PhysicsCasting.PhysicsCastTests.LayerBasedCapsulecast" executed="True" success="True" time="14.644" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Physics.PhysicsCasting.PhysicsCastTests.LayerBasedRaycastAll" executed="True" success="True" time="14.932" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Physics.PhysicsCasting.PhysicsCastTests.LayerBasedSpherecastAll" executed="True" success="True" time="15.259" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Physics.PhysicsCasting.PhysicsCastTests.RaycastingFromInsideVolumes" executed="True" success="True" time="14.897" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="PhysXDoesNotRunOutOfColliders" success="True" time="16.880" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Physics.PhysXDoesNotRunOutOfColliders.PhysXDoesNotRunOutOfCollidersTest" executed="True" success="True" time="16.852" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Prefabs" success="True" time="102.097" asserts="0">
                    <results>
                      <test-suite name="Prefabs" success="True" time="89.061" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.AllPrefabTests" executed="True" success="True" time="38.382" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.AwakeIsCalledAfterPrefabMerge" executed="True" success="True" time="12.506" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.PreventAddingComponentToFBXFile" executed="True" success="True" time="10.389" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestDontKillInstanceOnConnect" executed="True" success="True" time="1.569" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestFixInvalidReferencesContainedObjectsPrefab" executed="True" success="True" time="10.144" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestModifyHierarchy" executed="True" success="True" time="1.632" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestMoveRootUp" executed="True" success="True" time="1.460" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestParenting" executed="True" success="True" time="1.589" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestReplaceNameBasedRoot" executed="True" success="True" time="1.086" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Prefabs.Prefabs.TestReset" executed="True" success="True" time="10.246" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PrefabsAddingScriptPropertyWorks" success="True" time="13.027" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Prefabs.PrefabsAddingScriptPropertyWorks.RunTest" executed="True" success="True" time="13.024" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ProfilerSuite" success="True" time="49.110" asserts="0">
                    <results>
                      <test-suite name="ProfilerCoroutineIsNamedPretty" success="True" time="12.405" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.ProfilerSuite.ProfilerCoroutineIsNamedPretty.VerifyCSharp" executed="True" success="True" time="12.398" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ProfilerDrawStats" success="True" time="36.701" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.ProfilerSuite.ProfilerDrawStats.DrawStatsDefaultBatchingTest" executed="True" success="True" time="18.337" asserts="0" />
                          <test-case name="Unity.IntegrationTests.ProfilerSuite.ProfilerDrawStats.DrawStatsNonBatchingTest" executed="True" success="True" time="18.359" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Rendering" success="True" time="6.202" asserts="0">
                    <results>
                      <test-suite name="DeletingLightCookie" success="True" time="6.196" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Rendering.DeletingLightCookie.DeletingLightCookieShouldNotCrash" executed="True" success="True" time="6.194" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SceneLoading" success="True" time="202.337" asserts="0">
                    <results>
                      <test-suite name="AdditiveSceneLoading" success="True" time="24.870" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.AdditiveSceneLoading.LightmapsGetAppended" executed="True" success="True" time="16.111" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SceneLoading.AdditiveSceneLoading.RunInBackgroundBehavesOnMacAsOnWin" executed="True" success="True" time="8.731" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="BrokenSceneLoading" success="True" time="8.679" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.BrokenSceneLoading.MultipleManagers" executed="True" success="True" time="6.526" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SceneLoading.BrokenSceneLoading.NoManagers" executed="True" success="True" time="0.955" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SceneLoading.BrokenSceneLoading.ReferenceToDeprecatedPath" executed="True" success="True" time="1.163" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="EnteringPlaymodeMaintainsSelection" success="True" time="8.777" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.EnteringPlaymodeMaintainsSelection.Test" executed="True" success="True" time="8.772" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ExitPlaymodeDisallowSceneActivation" success="True" time="11.976" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.ExitPlaymodeDisallowSceneActivation.Run" executed="True" success="True" time="11.974" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GameObjectFindWorksOnDontDestroyOnLoaded" success="True" time="13.155" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.GameObjectFindWorksOnDontDestroyOnLoaded.Test" executed="True" success="True" time="13.154" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LoadingLevelHandlesDeprecatedEditorExtensionImpl" success="True" time="5.868" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.LoadingLevelHandlesDeprecatedEditorExtensionImpl.Test" executed="True" success="True" time="5.865" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LoadLevelDoesNotDeleteReferencedSceneAssetsFromPreviousScene" success="True" time="12.637" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.LoadLevelDoesNotDeleteReferencedSceneAssetsFromPreviousScene.Test" executed="True" success="True" time="12.636" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LoadLevelDoesNotDeleteReferencedSceneMaterialFromPreviousScene" success="True" time="13.311" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.LoadLevelDoesNotDeleteReferencedSceneMaterialFromPreviousScene.Test" executed="True" success="True" time="13.309" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LoadLevelFromOnDestroy" success="True" time="12.054" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.LoadLevelFromOnDestroy.Test" executed="True" success="True" time="12.052" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LoadOrderIsSameWhenHittingPlayThenWhenRunningScene" success="True" time="16.522" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.LoadOrderIsSameWhenHittingPlayThenWhenRunningScene.LightmapsGetAppended" executed="True" success="True" time="16.520" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ManagerResetInPlaymode" success="True" time="17.739" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.ManagerResetInPlaymode.NewSceneInPlaymodeDoesNotAssert" executed="True" success="True" time="9.246" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SceneLoading.ManagerResetInPlaymode.PhysicsGravityModificationInPlaymodeIsReset" executed="True" success="True" time="8.489" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SceneWithBadComponentLoading" success="True" time="11.922" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.SceneWithBadComponentLoading.LoadingSceneWithBadComponentShouldWarnAndRemoveIt" executed="True" success="True" time="5.875" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SceneLoading.SceneWithBadComponentLoading.LoadingSceneWithObsoleteSkinnedMeshRendere" executed="True" success="True" time="6.043" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StartingUnityWithBrokenScene" success="True" time="21.899" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.StartingUnityWithBrokenScene.LoadBehaviourWithScriptErrorsThenFixit" executed="True" success="True" time="21.895" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StaticBatchingWorksForDontDestroyOnLoadObjects" success="True" time="11.660" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.StaticBatchingWorksForDontDestroyOnLoadObjects.Test" executed="True" success="True" time="11.658" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnloadUnusedAssetsWorksCorrectlyWithDeepHierarchy" success="True" time="11.231" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SceneLoading.UnloadUnusedAssetsWorksCorrectlyWithDeepHierarchy.UnloadUnusedAssetsWorksCorrectlyWithDeepHierarchyTest" executed="True" success="True" time="11.228" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Scripting" success="True" time="1087.262" asserts="0">
                    <results>
                      <test-suite name="_3rdPartyAssemblies" success="True" time="30.964" asserts="0">
                        <results>
                          <test-suite name="LitJson" success="True" time="9.962" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting._3rdPartyAssemblies.LitJson.InEditor" executed="True" success="True" time="9.959" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ProtoBufNetWorks" success="True" time="10.859" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting._3rdPartyAssemblies.ProtoBufNetWorks.InEditor" executed="True" success="True" time="10.854" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="XCeedCompressionLibrary" success="True" time="10.134" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting._3rdPartyAssemblies.XCeedCompressionLibrary.InEditor" executed="True" success="True" time="10.133" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="CommandLineArgumentTests" success="True" time="5.051" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.CommandLineArgumentTests.CommandLineArgumentsAreAvailableToManagedCode" executed="True" success="True" time="5.048" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ConsoleWriteLineCanDealWithPrintfSpecialCharacters" success="True" time="13.251" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.ConsoleWriteLineCanDealWithPrintfSpecialCharacters.InEditor" executed="True" success="True" time="13.248" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ConsoleWriteLineEndsUpInUnityLog" success="True" time="15.025" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.ConsoleWriteLineEndsUpInUnityLog.InEditor" executed="True" success="True" time="15.022" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CorrectProfileCompilationTests" success="True" time="20.456" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.CorrectProfileCompilationTests.EditorScriptsCompileAgainst20Profile" executed="True" success="True" time="7.386" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.CorrectProfileCompilationTests.UserGameCodeCanBeCompiledAgainstUnityProfile" executed="True" success="True" time="6.427" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.CorrectProfileCompilationTests.UserGameCodeGetsCompiledAgainstUnityWebProfileWhenActiveBuildTargetIsWebplayer" executed="True" success="True" time="6.633" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CustomResponseFileTest" success="True" time="30.414" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.CustomResponseFileTest.CustomBoocResponseFile" executed="True" success="True" time="10.012" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.CustomResponseFileTest.CustomCSharpResponseFile" executed="True" success="True" time="9.680" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.CustomResponseFileTest.CustomUnityScriptResponseFile" executed="True" success="True" time="10.715" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DebugLogTests" success="True" time="17.828" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.DebugLogTests.TestDebugLogError" executed="True" success="True" time="6.022" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.DebugLogTests.TestDebugLogException" executed="True" success="True" time="0.747" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.DebugLogTests.TestDebugLogThreadSafety" executed="True" success="True" time="8.971" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.DebugLogTests.TestDebugLogWarning" executed="True" success="True" time="1.324" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.DebugLogTests.TestException" executed="True" success="True" time="0.722" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DeletingScriptInPlaymodeWorks" success="True" time="11.855" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.DeletingScriptInPlaymodeWorks.DeletingScriptInPlaymodeTest" executed="True" success="True" time="11.855" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DLLWithUnresolvableReferencesGetsProperErrorMessage" success="True" time="20.905" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.DLLWithUnresolvableReferencesGetsProperErrorMessage.EditorCode" executed="True" success="True" time="11.187" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.DLLWithUnresolvableReferencesGetsProperErrorMessage.RuntimeCode" executed="True" success="True" time="9.681" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="EnterPlaymodeIsDelayedUntillScriptCompilationFinishes" success="True" time="18.893" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.EnterPlaymodeIsDelayedUntillScriptCompilationFinishes.Run" executed="True" success="True" time="18.892" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ExceptionTests" success="True" time="98.150" asserts="0">
                        <results>
                          <test-suite name="AssignToUninitializedMultiDimensionalArrayThrows" success="True" time="10.397" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.AssignToUninitializedMultiDimensionalArrayThrows.Test" executed="True" success="True" time="10.395" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="CanCatchExceptionAfterDerefencingNullReference" success="True" time="10.206" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.CanCatchExceptionAfterDerefencingNullReference.InEditor" executed="True" success="True" time="10.204" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ExceptionInCoroutineGetsLogged" success="True" time="11.651" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.ExceptionInCoroutineGetsLogged.InEditor" executed="True" success="True" time="11.649" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ExceptionInMonoBehaviourGetsLogged" success="True" time="9.984" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.ExceptionInMonoBehaviourGetsLogged.InEditor" executed="True" success="True" time="9.982" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ExceptionTests" success="True" time="10.327" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.ExceptionTests.ExceptionWhenInitializingStaticVar" executed="True" success="True" time="10.326" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ExceptionThrownFromNonMainThreadDoesNotKillProcess" success="True" time="10.819" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.ExceptionThrownFromNonMainThreadDoesNotKillProcess.InEditor" executed="True" success="True" time="10.817" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="MissingMethodExceptionTest" success="True" time="10.890" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.MissingMethodExceptionTest.MissingMethodExceptionPrintsMethodName" executed="True" success="True" time="10.888" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="NotCatchingNullReferenceExceptionDoesntCrash" success="True" time="9.930" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.NotCatchingNullReferenceExceptionDoesntCrash.InEditor" executed="True" success="True" time="9.926" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="StackOverflowExceptionIsHandled" success="True" time="13.906" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.ExceptionTests.StackOverflowExceptionIsHandled.RequireComponentAttributeStackOverflowTest" executed="True" success="True" time="13.905" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Instantiate" success="True" time="9.694" asserts="0">
                        <categories>
                          <category name="MinimalSuite" />
                        </categories>
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.Instantiate.Editor" executed="True" success="True" time="9.691" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LoadAssemblyFromMemoryStreamAndExecutePrivateCodeInIt" success="True" time="12.114" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.LoadAssemblyFromMemoryStreamAndExecutePrivateCodeInIt.InEditor" executed="True" success="True" time="12.108" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MenuItemsInEditorScriptsWork" success="True" time="8.564" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.MenuItemsInEditorScriptsWork.Test" executed="True" success="True" time="8.562" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MonoBehaviours" success="True" time="55.972" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.MonoBehaviours.AddComponentColliderHandlesCorrectly" executed="True" success="True" time="14.616" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.MonoBehaviours.CanDebugLogAnUnassignedField" executed="True" success="True" time="8.974" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.MonoBehaviours.IssueWithYieldsInMacTests" executed="True" success="True" time="8.574" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.MonoBehaviours.NonYieldingCoroutineCrashesInCS" executed="True" success="True" time="8.639" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.MonoBehaviours.NonYieldingCoroutineCrashesInJS" executed="True" success="True" time="8.843" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.MonoBehaviours.RequireComponentColliderHandlesCorrectly" executed="True" success="True" time="6.278" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="NamespaceTestBoo" success="True" time="41.011" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestBoo.CanUseScriptWithDottedNamespace" executed="True" success="True" time="10.246" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestBoo.CanUseScriptWithNamespace" executed="True" success="True" time="10.157" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestBoo.CanUseTwoScriptsWithAndWithoutNamespaces" executed="True" success="True" time="10.441" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestBoo.CanUseTwoScriptsWithNamespaces" executed="True" success="True" time="10.160" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="NamespaceTestCSharp" success="True" time="53.448" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestCSharp.CanUseScriptWithClassOutsideNamespace" executed="True" success="True" time="11.381" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestCSharp.CanUseScriptWithDottedNamespace" executed="True" success="True" time="4.974" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestCSharp.CanUseScriptWithNamespace" executed="True" success="True" time="9.753" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestCSharp.CanUseScriptWithNestedNamespace" executed="True" success="True" time="12.171" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestCSharp.CanUseTwoScriptsWithAndWithoutNamespaces" executed="True" success="True" time="4.975" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.NamespaceTestCSharp.CanUseTwoScriptsWithNamespaces" executed="True" success="True" time="10.178" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ScriptCompilationTest" success="True" time="182.631" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.BooCompileErrorsGetReported" executed="True" success="True" time="6.219" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.CanExitPlaymodeAfterScriptRecompilation" executed="True" success="True" time="10.892" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.CanExitPlaymodeDuringScriptRecompilation" executed="True" success="True" time="10.726" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.CSharpCompileErrorsGetReported" executed="True" success="True" time="6.427" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.CSharpScriptWithClassNameNotMatchingFilenameDoesNotProduceWarning" executed="True" success="True" time="7.325" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.DeleteLastDllInProject" executed="True" success="True" time="10.959" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.EditorScriptsCanReferenceGameScripts" executed="True" success="True" time="10.904" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.RemovingFailingEditorScriptMakesOtherScriptsWorkAgain" executed="True" success="True" time="34.137" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.RemovingLastScriptResolvesCompilerErrors" executed="True" success="True" time="7.348" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.RemovingOneFailingScriptResolvesCompilerErrors" executed="True" success="True" time="8.312" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.ScriptResolvingMissingTypeFromDll" executed="True" success="True" time="11.172" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.StoreMonoScriptInSceneAndReferenceDllInLibraryFolder" executed="True" success="True" time="7.494" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.TestInheritanceOfScriptInDll" executed="True" success="True" time="8.905" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.TestInheritFromEditorWindowInDll" executed="True" success="True" time="8.486" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.TestScriptsImportedFromDll" executed="True" success="True" time="9.661" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.TestScriptWithNameSpaceFromDll" executed="True" success="True" time="8.752" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.TestSingleDllReloadsAssemblies" executed="True" success="True" time="8.194" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTest.UnityScriptCompileErrorsGetReported" executed="True" success="True" time="6.664" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ScriptCompilationTestAfterRestart" success="True" time="62.242" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTestAfterRestart.DeletingMonoManagerAssetHasNoSideEffects" executed="True" success="True" time="11.244" asserts="2" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTestAfterRestart.FailedBuildKeepsScriptsInWorkingShape" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTestAfterRestart.MetaDataKeepsReferencesToScripts" executed="True" success="True" time="13.972" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTestAfterRestart.QuittingEditorBeforeScriptCompilationFinished" executed="True" success="True" time="12.948" asserts="2" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTestAfterRestart.RestartEditorAfterCompileErrorCausesRecompile" executed="True" success="True" time="11.446" asserts="2" />
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTestAfterRestart.RestartEditorAfterReimportOfScriptCausesRecompileOnNextEditorLaunch" executed="True" success="True" time="12.622" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ScriptCompilationTests2" success="True" time="6.657" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.ScriptCompilationTests2.ScriptCompilationWorksWhenHavingAnEnvironmentVariableWithNonASCIICharacters" executed="True" success="True" time="6.655" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StackTraces" success="True" time="190.637" asserts="0">
                        <results>
                          <test-suite name="StackTraceHasSourceFileName" success="True" time="13.466" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraceHasSourceFileName.InEditor" executed="True" success="True" time="13.465" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="StackTraces" success="True" time="177.161" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpDebugLogCoroutine" executed="True" success="True" time="13.359" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpDebugLogOnGUI" executed="True" success="True" time="14.297" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpNullExceptionCoroutine" executed="True" success="True" time="13.462" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpNullExceptionOnGUI" executed="False">
                                <reason>
                                  <message><![CDATA[Not supported on Win]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpNullExceptionRethrow" executed="True" success="True" time="13.077" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpStacktraceIntoUnityEngine" executed="True" success="True" time="13.370" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpStacktraceIntoUnityEngineAndBack" executed="True" success="True" time="13.337" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.CSharpStacktraceWithUnknownLineNumberProperlyStripped" executed="True" success="True" time="13.425" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.JavaScriptDebugLogCoroutine" executed="True" success="True" time="15.490" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.JavaScriptMissingReferenceException" executed="True" success="True" time="13.700" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.JavaScriptMissingReferenceExceptionCoroutine" executed="True" success="True" time="13.522" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.JavaScriptNullException" executed="True" success="True" time="13.417" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.JavaScriptNullExceptionCoroutine" executed="True" success="True" time="13.364" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.StackTraces.StackTraces.JavaScriptThrowException" executed="True" success="True" time="13.309" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="SystemDiagnosticsTrace" success="True" time="11.918" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.SystemDiagnosticsTrace.CanRegisterTraceListenerInTheEditor" executed="True" success="True" time="11.897" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SystemIO" success="True" time="6.887" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.SystemIO.DirectoryGetFilesReturnsCorrectValueWhenPathArgumentEndsWithBackSlash" executed="True" success="True" time="6.143" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Scripting.SystemIO.DirectoryGetFilesReturnsCorrectValueWhenPathArgumentEndsWithForwardSlash" executed="True" success="True" time="0.715" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SystemReflectionAssembly" success="True" time="9.035" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.SystemReflectionAssembly.AssemblyNameAndLocation" executed="True" success="True" time="9.029" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnityExceptionsThreadSafe" success="True" time="10.896" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Scripting.UnityExceptionsThreadSafe.ThreadSafeFromFinalizer" executed="True" success="True" time="10.890" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnityScript" success="True" time="142.666" asserts="0">
                        <results>
                          <test-suite name="AutomaticFloatToIntConversionWorks" success="True" time="13.534" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.AutomaticFloatToIntConversionWorks.AutomaticFloatToIntConversionWorksTest" executed="True" success="True" time="13.509" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="CanReferenceCSharpCode" success="True" time="19.750" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.CanReferenceCSharpCode.FromStandardAssetsEditorScripts" executed="True" success="True" time="12.485" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.CanReferenceCSharpCode.FromStandardAssetsScripts" executed="True" success="True" time="7.224" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="DuckTypedArrayLength" success="True" time="13.788" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.DuckTypedArrayLength.DuckTypedArrayLengthTest" executed="True" success="True" time="13.762" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="DynamicDispatchingTest" success="True" time="10.097" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.DynamicDispatchingTest.InEditor" executed="True" success="True" time="10.093" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ErrorReportingTest" success="True" time="5.932" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.ErrorReportingTest.TestInEditor" executed="True" success="True" time="5.930" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="JSChooseOverload" success="True" time="13.868" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.JSChooseOverload.JSChooseOverloadTest" executed="True" success="True" time="13.834" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="JSCoroutineWorks" success="True" time="14.406" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.JSCoroutineWorks.JSCoroutineWorksTest" executed="True" success="True" time="14.383" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="MagicConstructor" success="True" time="14.419" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.MagicConstructor.MagicConstructorTest" executed="True" success="True" time="14.390" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="PrivateValueInCoroutine" success="True" time="14.078" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.PrivateValueInCoroutine.PrivateValueInCoroutineTest" executed="True" success="True" time="14.049" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ShortCircuitedEvaluationTest" success="True" time="9.845" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.ShortCircuitedEvaluationTest.AndShouldShortCircuitOnImplicitBooleanConversions" executed="True" success="True" time="9.844" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="StrictModeTest" success="True" time="12.914" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.StrictModeTest.GetComponentTypeIsInferredCorrectly" executed="True" success="True" time="7.002" asserts="0" />
                              <test-case name="Unity.IntegrationTests.Scripting.UnityScript.StrictModeTest.ImplicitVariableDeclarationIsDisabledByDefault" executed="True" success="True" time="5.905" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Serialization" success="True" time="164.902" asserts="0">
                    <results>
                      <test-suite name="BrokenTextSerializedFiles" success="True" time="73.909" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.LevelManagerAtEndOfFileDoesNotCrash" executed="True" success="True" time="6.682" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithAsbstractObjectDoesNotCrash" executed="True" success="True" time="6.069" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithBrokenChildReferenceGivesErrorAndFixesReference" executed="True" success="True" time="6.256" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithBrokenComponentReferenceGivesErrorAndFixeseference" executed="True" success="True" time="6.543" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithBrokenGameObjectReferenceGivesErrorAndFixesReference" executed="True" success="True" time="6.315" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithBrokenParentReferenceGivesErrorAndFixesReference" executed="True" success="True" time="6.206" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithGarbageYAMLGivesErrorAndRemovesGarbage" executed="True" success="True" time="6.062" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithMergeConflictsGivesWarning" executed="False">
                            <reason>
                              <message><![CDATA[Only supported on Unix]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithMissingGameObjectRemovesComponents" executed="True" success="True" time="6.590" asserts="1" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithNonExistingGUIDReferenceWillNotBreakReferencesToBuiltinResources" executed="True" success="True" time="17.056" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Serialization.BrokenTextSerializedFiles.ReadingFileWithWindowsLineEndingsWorks" executed="True" success="True" time="6.106" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FileIDs" success="True" time="18.591" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Serialization.FileIDs.FileIDConflictsAreResolved" executed="True" success="True" time="6.257" asserts="36" />
                          <test-case name="Unity.IntegrationTests.Serialization.FileIDs.FileIDsStaySameAfterAddingObject" executed="True" success="True" time="5.954" asserts="10" />
                          <test-case name="Unity.IntegrationTests.Serialization.FileIDs.FileIDsStaySameAfterDeletingObject" executed="True" success="True" time="6.369" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite name="MonoBehaviourBackupSerialization" success="True" time="31.089" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Serialization.MonoBehaviourBackupSerialization.TestBinaryBackupSerialization" executed="True" success="True" time="15.429" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Serialization.MonoBehaviourBackupSerialization.TestTextBackupSerialization" executed="True" success="True" time="15.659" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MonoBehaviourSerialization" success="True" time="26.064" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Serialization.MonoBehaviourSerialization.MonoBehaviourRecursionLimitWorks" executed="True" success="True" time="8.746" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Serialization.MonoBehaviourSerialization.TestAlignment" executed="True" success="True" time="8.587" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Serialization.MonoBehaviourSerialization.TestEnumNamesTest" executed="True" success="True" time="8.723" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UpdateToTextMode" success="True" time="15.222" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Serialization.UpdateToTextMode.ChangeSerializationModeWorks" executed="True" success="True" time="7.241" asserts="9" />
                          <test-case name="Unity.IntegrationTests.Serialization.UpdateToTextMode.ImportedAssetsAreConvertedToCurrentSerializationMode" executed="True" success="True" time="7.976" asserts="8" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SerializedObjectTest" success="True" time="141.081" asserts="0">
                    <results>
                      <test-suite name="MorphingClassesAndSerialization" success="True" time="20.697" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.MorphingClassesAndSerialization.TestTextModeSerializationWithThroughBrokenCode" executed="True" success="True" time="20.695" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializedObjectTest" success="True" time="120.381" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.AnimationCurveIsSaved" executed="True" success="True" time="11.562" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.ArraySizeIsSaved" executed="True" success="True" time="6.998" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.BooleanIsSaved" executed="True" success="True" time="7.009" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.BoundsIsSaved" executed="True" success="True" time="7.175" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.CharacterIsSaved" executed="True" success="True" time="7.460" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.ColorIsSaved" executed="True" success="True" time="6.803" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.EnumIsSaved" executed="True" success="True" time="7.089" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.FloatIsSaved" executed="True" success="True" time="7.104" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.IntegerIsSaved" executed="True" success="True" time="7.027" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.LayerMaskIsSaved" executed="True" success="True" time="6.914" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.MonoCharacterIsNotHandled" executed="True" success="True" time="10.108" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.ObjectReferenceIsSaved" executed="True" success="True" time="6.960" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.RectIsSaved" executed="True" success="True" time="6.978" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.SerializedPropertyResizeAfterFindPropertyWorks" executed="True" success="True" time="6.846" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.StringIsSaved" executed="True" success="True" time="7.125" asserts="0" />
                          <test-case name="Unity.IntegrationTests.SerializedObjectTest.SerializedObjectTest.Vector3IsSaved" executed="True" success="True" time="7.141" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Terrain" success="True" time="7.291" asserts="0">
                    <results>
                      <test-suite name="ToManyTreeColliders" success="True" time="7.291" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Terrain.ToManyTreeColliders.DoesNotCrash" executed="True" success="True" time="7.290" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Threading" success="True" time="24.050" asserts="0">
                    <results>
                      <test-suite name="StaticVariablesFromLoadingThread" success="True" time="24.049" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Threading.StaticVariablesFromLoadingThread.TestManagedThreadStaticVariable" executed="True" success="True" time="15.429" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Threading.StaticVariablesFromLoadingThread.TestPreloadThreadStaticVariable" executed="True" success="True" time="8.587" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Trees" success="True" time="9.907" asserts="0">
                    <results>
                      <test-suite name="TreeCreator" success="True" time="9.906" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Trees.TreeCreator.CreateTreeAndSavingSceneDontLeak" executed="True" success="True" time="9.905" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="UndoTest" success="True" time="37.339" asserts="0">
                    <results>
                      <test-suite name="UndoTest" success="True" time="37.338" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.UndoTest.UndoTest.DirtyAssetWillBeSaved" executed="True" success="True" time="12.786" asserts="0" />
                          <test-case name="Unity.IntegrationTests.UndoTest.UndoTest.TestAnimationModeSnapshot" executed="True" success="True" time="5.377" asserts="0" />
                          <test-case name="Unity.IntegrationTests.UndoTest.UndoTest.UndoAfterSaveAssetWillDirtyAsset" executed="True" success="True" time="8.999" asserts="0" />
                          <test-case name="Unity.IntegrationTests.UndoTest.UndoTest.UndoSnapshot" executed="True" success="True" time="5.154" asserts="0" />
                          <test-case name="Unity.IntegrationTests.UndoTest.UndoTest.UndoWorksWithMultiObjectEditing" executed="True" success="True" time="4.986" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Unwrap" success="True" time="40.321" asserts="0">
                    <results>
                      <test-suite name="UnwrapTester" success="True" time="40.319" asserts="0">
                        <results>
                          <test-case name="Unity.IntegrationTests.Unwrap.UnwrapTester.AbortUnwrapTest" executed="True" success="True" time="5.453" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Unwrap.UnwrapTester.CallUnwrapInScriptSimpleTest" executed="True" success="True" time="5.034" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Unwrap.UnwrapTester.CallUnwrapInScriptTest" executed="True" success="True" time="8.362" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Unwrap.UnwrapTester.NoCrashUnwrapTest" executed="True" success="True" time="16.369" asserts="0" />
                          <test-case name="Unity.IntegrationTests.Unwrap.UnwrapTester.ReplaceUV2ReportErrorTest" executed="True" success="True" time="5.085" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite name="UnityEditor" success="True" time="5.605" asserts="0">
            <results>
              <test-suite name="Tests" success="True" time="5.604" asserts="0">
                <results>
                  <test-suite name="Utils" success="True" time="5.599" asserts="0">
                    <results>
                      <test-suite name="ProgramTest" success="True" time="5.599" asserts="0">
                        <results>
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.CanReadEntireOutputOfProgram" executed="True" success="True" time="0.237" asserts="1" />
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.CanReadEntireProgramOutputEvenWhenOutputPausesHalfway" executed="True" success="True" time="1.133" asserts="1" />
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.CorrectlyReportsExitCode" executed="True" success="True" time="0.064" asserts="1" />
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.DisposeKillsProcess" executed="True" success="True" time="0.039" asserts="0" />
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.MultipleProgramInvocationsDontInterfere" executed="True" success="True" time="1.080" asserts="6" />
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.ProcessOutputStreamReaderDoesntThrowWhenStreamWasDisposed" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="UnityEditor.Tests.Utils.ProgramTest.ProgramAlsoFinishesWhenWeDontPoll" executed="True" success="True" time="3.030" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\buildslave\unity\build\Tests\bin\Debug\Unity.Automation.Tests.dll" success="True" time="142.495" asserts="0">
        <results>
          <test-suite name="Unity" success="True" time="142.486" asserts="0">
            <results>
              <test-suite name="Automation" success="True" time="142.485" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="142.477" asserts="0">
                    <results>
                      <test-suite name="CodeEvaluationTest" success="True" time="24.049" asserts="0">
                        <categories>
                          <category name="MinimalSuite" />
                        </categories>
                        <results>
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.AssembliesWithMatchingNamespaceCanBeReferencedThroughImport" executed="True" success="True" time="6.508" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalAsStringCanReferenceTypesInTestDirectly" executed="True" success="True" time="5.819" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalGivesHelpfulMessageForNonStaticLambdas" executed="True" success="True" time="0.690" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalGivesHelpfulMessageForNonStaticMethod" executed="True" success="True" time="0.247" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalStringCanGetHugeStringArgument" executed="True" success="True" time="0.316" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalStringCanReturnHugeStringArgument" executed="True" success="True" time="0.328" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalStringCanReturnStringArgument" executed="True" success="True" time="0.319" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalWithMultipleLinesAndReturnValue" executed="True" success="True" time="0.420" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.EvalWithSimpleReturnValue" executed="True" success="True" time="0.413" asserts="2" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.LambdaTeleportationWithTrickyStringArgument" executed="True" success="True" time="0.351" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.ScriptAssembliesAreAutomaticallyReferenced" executed="True" success="True" time="3.968" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.SimpleStringEvaluation" executed="True" success="True" time="0.720" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticLambdaTeleportation" executed="True" success="True" time="0.475" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticLambdaWithHeterogenousArrayContainingNullArgumentTeleportation" executed="True" success="True" time="0.563" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticLambdaWithStringArrayArgumentTeleportation" executed="True" success="True" time="0.432" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticLambdaWithStringArrayContainingNullArgumentTeleportation" executed="True" success="True" time="0.505" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticLambdaWithUnityEditorEnumArgumentTeleportation" executed="True" success="True" time="0.372" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticLamdaWithArgumentsTeleportation" executed="True" success="True" time="0.484" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticMethodTeleportation" executed="True" success="True" time="0.370" asserts="0" />
                          <test-case name="Unity.Automation.Tests.CodeEvaluationTest.StaticMethodWithArgumentsTeleportation" executed="True" success="True" time="0.611" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CodeExtractorTests" success="True" time="0.039" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.CodeExtractorTests.ConstructorThrowsArgumentNullExceptionIfTextArgumentIsNull" executed="True" success="True" time="0.020" asserts="1" />
                          <test-case name="Unity.Automation.Tests.CodeExtractorTests.ExtractTypeCodeThrowsArgumentNullExceptionIfTypeNameArgumentIsNull" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CodeUtilsTests" success="True" time="0.003" asserts="0">
                        <results />
                      </test-suite>
                      <test-suite name="DiagnosticsReportingTests" success="True" time="5.311" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.DiagnosticsReportingTests.EditorReportsLogFileAsArtifact" executed="True" success="True" time="5.310" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="FakeWebServerTests" success="True" time="13.857" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.CanHaveUnexptectedRequests" executed="True" success="True" time="1.036" asserts="1" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.CanReportCustomContentLength" executed="True" success="True" time="0.014" asserts="1" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.CanStartTwoWebServersInSerial" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.CanThrottleHttpResponse" executed="True" success="True" time="12.029" asserts="1" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.CustomEncodingIsAppendedToCharset" executed="True" success="True" time="0.007" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.CustomRequestHandlerWorks" executed="True" success="True" time="0.007" asserts="2" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectGetCanReturn404" executed="True" success="True" time="0.034" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectGetCanReturnFileContents" executed="True" success="True" time="0.017" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectGetCanReturnHtml" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectGetCanTimeout" executed="True" success="True" time="0.092" asserts="1" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectGetWorks" executed="True" success="True" time="0.405" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectOnceQueryTwiceFails" executed="True" success="True" time="0.036" asserts="4" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectResultsOnlyOnceWorks" executed="True" success="True" time="0.033" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.ExpectTwiceQueryOnceFails" executed="True" success="True" time="0.008" asserts="2" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.IgnoreParametersWorks" executed="True" success="True" time="0.006" asserts="4" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.NoEncodingGivesDefaultUTF8" executed="True" success="True" time="0.008" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.NotQueryingOptionalExpectationWorks" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.QueryingOutOfOrderWorks" executed="True" success="True" time="0.010" asserts="2" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.QueryOptionalExpectationWorks" executed="True" success="True" time="0.005" asserts="2" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.UnExpectedGetFails" executed="True" success="True" time="0.008" asserts="2" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.WebServerCanDealWithNonPort80Requests" executed="True" success="True" time="0.042" asserts="3" />
                          <test-case name="Unity.Automation.Tests.FakeWebServerTests.WebServerReturnsReasonablePort" executed="True" success="True" time="0.003" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FileLogMessageProviderTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.FileLogMessageProviderTest.CanReadSeveralLines" executed="False">
                            <reason>
                              <message><![CDATA[Fixture class is not public]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.Automation.Tests.FileLogMessageProviderTest.CanReadUTF8Text" executed="False">
                            <reason>
                              <message><![CDATA[Fixture class is not public]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="FireFoxTests" success="True" time="4.360" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.FireFoxTests.CanMakeFireFoxRespectFakeWebServer" executed="True" success="True" time="4.360" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="JavaScriptEncoderTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.JavaScriptEncoderTest.StringEncoding" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="LambdaToStringConverterTests" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.LambdaToStringConverterTests.LambdaWithoutCurliesFails" executed="False">
                            <reason>
                              <message><![CDATA[Should make this work to make it more userfriendly]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.Automation.Tests.LambdaToStringConverterTests.MultiLineLambdaWorks" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Unity.Automation.Tests.LambdaToStringConverterTests.SimpleLambdaWorks" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="LogReaderTests" success="True" time="0.276" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.LogReaderTests.CanExpectSomethinginALongLogThatTookALongTimeToWriteEvenAfterReadUntillEnd" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.ContainsCanDealWithUTF8Text" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.ExpectSomethingOnEmptyFileThrowsTimeoutException" executed="True" success="True" time="0.039" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.NotContainsDoesNotThrowWhenLogfileDoesNotContainMessage" executed="True" success="True" time="0.007" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.NotContainsThrowsWhenLogfileDoesContainMessage" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.NotContainsWorksAfterSameMessageHasBeenExpected" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.RegularExpectSucceedsAndFailsCorrectly" executed="True" success="True" time="0.032" asserts="0" />
                          <test-case name="Unity.Automation.Tests.LogReaderTests.SlowlyWrittenLineDoesNotGetReadAsMultipleLines" executed="True" success="True" time="0.170" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PlatformConverterTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.PlatformConverterTests.CanConvertCorrectlyFromRuntimePlatformToBuildTarget" executed="False">
                            <reason>
                              <message><![CDATA[Fixture class is not public]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ScriptResourceTests" success="True" time="0.492" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.CanExtractTypeFromSource" executed="True" success="True" time="0.076" asserts="1" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.CanExtractTypeFromSourceAndReplaceStrings" executed="True" success="True" time="0.071" asserts="1" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.CanGuessTypeNameFromScriptBody" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.CanGuessTypeNameFromScriptBodyWithClassThatDoesntHaveBaseClass" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.ExtractingUsingDirectivesWorks" executed="True" success="True" time="0.070" asserts="3" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.ExtractSupportsClassAttributes" executed="True" success="True" time="0.109" asserts="1" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.ExtractSupportsEnum" executed="True" success="True" time="0.083" asserts="1" />
                          <test-case name="Unity.Automation.Tests.ScriptResourceTests.ExtractSupportsStruct" executed="True" success="True" time="0.075" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ShellTests" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.ShellTests.ExecuteProgramAndGrabStdOut" executed="False">
                            <reason>
                              <message><![CDATA[Not supported on Win]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="StringLogMessageProviderTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.StringLogMessageProviderTest.CanExpectMultipleEntries" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnityEditorTest" success="True" time="32.500" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.UnityEditorTest.CanStartWithCleanedLog" executed="True" success="True" time="5.202" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTest.CanStartWithNonCleanedLog" executed="True" success="True" time="7.104" asserts="0">
                            <categories>
                              <category name="MinimalSuite" />
                            </categories>
                          </test-case>
                          <test-case name="Unity.Automation.Tests.UnityEditorTest.MonoBehaviourToRunOnEditorStartupWorks" executed="True" success="True" time="9.601" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTest.UnityDiesWhileWaitingWithHugeTimeoutReturnsImmediately" executed="True" success="True" time="6.261" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTest.WarningsShowUpInCleanLog" executed="True" success="True" time="4.330" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnityEditorTestBaseTest" success="True" time="61.494" asserts="0">
                        <results>
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.CanUseScriptResourceExtractedFromCode" executed="True" success="True" time="13.458" asserts="1" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.DebugLogAndExpect" executed="True" success="True" time="1.267" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.ExpectedLogExceptionHasGotMessage" executed="True" success="True" time="0.739" asserts="1" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.ExpectedLogOrderIsRespected" executed="True" success="True" time="0.522" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.ExpectRegextMatch" executed="True" success="True" time="5.902" asserts="3" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.ExpectRegextMatchFailureMessageIncludesRegex" executed="True" success="True" time="0.773" asserts="1" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.ForceScriptReloadWorks" executed="True" success="True" time="6.007" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.GetValueOfWorks" executed="True" success="True" time="1.420" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.IncorrectLogMessagesAtEndAreDetected" executed="False">
                            <reason>
                              <message><![CDATA[We haven't taken a decision on how to be support this.]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogExpectRespectsTimeout" executed="True" success="True" time="0.928" asserts="2" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogIgnoresEmptyLines" executed="True" success="True" time="1.003" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogMultipleExpectedMessages" executed="True" success="True" time="0.996" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogNonStrictContains" executed="True" success="True" time="0.799" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogNonStrictModeIgnoresPrints" executed="True" success="True" time="1.016" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogStrictExactStringMatch" executed="True" success="True" time="0.377" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.LogStrictModeRequiresOrder" executed="True" success="True" time="5.124" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.RunMonoBehaviourWorks" executed="True" success="True" time="13.303" asserts="0" />
                          <test-case name="Unity.Automation.Tests.UnityEditorTestBaseTest.ThrowsWhenAnotherUnityIsAlreadyRunning" executed="True" success="True" time="7.818" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\buildslave\unity\build\Tests\bin\Debug\Unity.IntegrationTests.Framework.dll" success="True" time="11.007" asserts="0">
        <results>
          <test-suite name="Unity" success="True" time="10.999" asserts="0">
            <results>
              <test-suite name="IntegrationTests" success="True" time="10.998" asserts="0">
                <results>
                  <test-suite name="Framework" success="True" time="10.998" asserts="0">
                    <results>
                      <test-suite name="Tests" success="True" time="10.991" asserts="0">
                        <results>
                          <test-suite name="ProjectBuildingTestAutoCopiesAllMonoBehaviour" success="True" time="10.957" asserts="0">
                            <results>
                              <test-case name="Unity.IntegrationTests.Framework.Tests.ProjectBuildingTestAutoCopiesAllMonoBehaviour.Test" executed="True" success="True" time="10.940" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>