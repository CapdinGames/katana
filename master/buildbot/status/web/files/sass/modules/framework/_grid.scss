/**
* Grid implementation.
* Unity3d
* @section framework
* @author Simon Holm
*/
  
//forthcoming mediaqueries
$bkpt-small: 0 570px;
$bkpt-small-portrait: (0 570px )(orientation portrait);
$bkpt-medium: 570px 1000px;
$bkpt-large: min-width 1000px;
$bkpt-xlarge: min-width 1600px;

$bkpt-small-height: (max-height 460px)(orientation landscape);
// create $breakpoint variables like so
// assume min-width (by default) if only a number
/*
$breakpoint-medium-width: 500px;
$breakpoint-medium-width-em: 30em;
// set min-width/max-width if both values are numbers
$breakpoint-medium-not-wide: 500px 700px;
// set min/max of feature if there are two numbers
$breakpoint-medium-height: height 300px 700px;
// if one value is a string, assume a feature/value pair
$breakpoint-kind-of-wide: min-width 700px;
$breakpoint-not-too-wide: max-width 700px;
// for multidimensional lists, assume each item is a feature value pair
$breakpoint-wide-portrait: (max-width 700px) (orientation portrait);
// handle one-sided features (ie. monochrome)
$breakpoint-wide-portrait-mono: (max-width 700px) (orientation portrait) (monochrome);
$breakpoint-mono: monochrome;
$breakpoint-hi-rez: 2 device-pixel-ratio;
*/
.container-inner {
	clear:both;
	margin: 0 auto;
	width: 1500px;
	position:relative;
	padding:0 8px;
	//@include box-sizing(border-box);
}

/* column container */
div.column {
	margin: 0 20px 20px 0;
	float: left;
	background: none repeat scroll 0 0 #FFFFFF;
    border: 1px solid #CCCCCC;
    border-radius: 10px;
    padding: 6px 20px 20px;
    width: 426px;
   	font-size: 12px;
}

div.column-1 {
	width: 100%;
	margin-bottom:35px;
	position: relative;
	background-color: #FFFFFF;
	border-radius: 10px;
	border: 1px solid #CCCCCC;
	float:left;
	@include box-shadow(1px 1px 0 #FFFFFF);
	&.inner {
		padding:21px 20px 25px 20px;
		width: 920px;	
	}
	&.inner-1 {
		padding:21px 20px 25px 20px;
		float: none;
	}
}

.column-2 {
	margin: 21px 20px 25px 20px;
    width: 442px;
    float: left;
	&.last {
		border:none;
	}
	&:before {
		background-color: #E7E7E7;
	    bottom: 0;
	    content: " ";
	    margin: 25px 0 25px -20px;
	    position: absolute;
	    top: 0;
	    width: 1px;
	}
	&:first-child:before {
		background: none;	
	}
}

.m-top20 {margin-top:20px;}
 
@include breakpoint($bkpt-small) {
	.container-inner {
		width: 100%;
		@include box-sizing(border-box);
	}
	div.column-1 {
		padding:15px;
		width: 100%;
		@include box-sizing(border-box);
	}
	.column-2 {
		float: none;
		width: 100%;
		margin: 0 0 20px;
		border-bottom: 1px solid #D7D7D7;
		padding-bottom: 20px;
		&:before {
			background-color: transparent;
		    margin: 0;
		    width: auto;
		}
	}
}

@include breakpoint($bkpt-medium) {
	.container-inner {
		width: 100%;
		@include box-sizing(border-box);
	}
	div.column-1 {
		padding:15px;
		width: 100%;
		@include box-sizing(border-box);
	}
	.column-2 {
		float: none;
		width: 100%;
		margin: 0 0 20px;
		border-bottom: 1px solid #D7D7D7;
		padding-bottom: 20px;
		&:before {
			background-color: transparent;
		    margin: 0;
		    width: auto;
		}
	}
}	

@include breakpoint($bkpt-large) {
	.container-inner {
		width: 960px;
	}
}

@include breakpoint($bkpt-xlarge) {
	.container-inner {
		width: 1500px;
	}
	.column-2 {
		width: 710px;	
	}
}
